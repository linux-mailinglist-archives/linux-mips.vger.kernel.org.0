Return-Path: <linux-mips-owner@vger.kernel.org>
X-Original-To: lists+linux-mips@lfdr.de
Delivered-To: lists+linux-mips@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id E679925A5DB
	for <lists+linux-mips@lfdr.de>; Wed,  2 Sep 2020 08:54:30 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726140AbgIBGy3 (ORCPT <rfc822;lists+linux-mips@lfdr.de>);
        Wed, 2 Sep 2020 02:54:29 -0400
Received: from mail-il1-f196.google.com ([209.85.166.196]:45851 "EHLO
        mail-il1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726419AbgIBGyX (ORCPT
        <rfc822;linux-mips@vger.kernel.org>); Wed, 2 Sep 2020 02:54:23 -0400
Received: by mail-il1-f196.google.com with SMTP id q6so4059490ild.12
        for <linux-mips@vger.kernel.org>; Tue, 01 Sep 2020 23:54:23 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=NXkrhht6q/ABGeb2TBNJsVr+vrAGAjQ8EtRde81433k=;
        b=Dwq74fY8RCugUnlhM8ctg9x75N4TKoB3nUQ9Ted3DuNY6PCHbVWqjYe/Y0ucnAaMO9
         qzzUq9VL1iaU1C3gCpwQJ8i4oYr7CvWzrj1yPSoyQnSXNRrrvEzu2AuYk7XwH3R1pXwu
         xwoLNj5EYKDJ36hve9bky/8gpEZ03dk9T3gjVKhkG11hcoDgEoWWmX4cggams1hIUOij
         DOtO6eEfD1c9rW4v8ZiEEDQ3JVvHkoSfl+gHIrFwQx4n7bTNt2Zps5m3tN+cNYd6TxFb
         CqrH6OrvPc3IFSB+RsagU59aBJjSkHx1exBLK+9zsrANrTbz7o+FTFg955OlKmFFzGam
         BQyA==
X-Gm-Message-State: AOAM533ewdDie73McygbY2o/zrf2fOsAKAIBvvgDezY3lA4n9aRERJdQ
        Tucv1Dp2tpLtdO3fWr8wrYHwadqXHJ+iomCW2xhHo2mtnl4=
X-Google-Smtp-Source: ABdhPJxsBa8KV/DcxswJoSPrsszeS7ZqF/8OnJpWCil4w8MwgBOWEuaEHrXubDUvjCFVF+2jpycCVyiJekfOwVuCevg=
X-Received: by 2002:a05:6e02:d8f:: with SMTP id i15mr2441590ilj.147.1599029662622;
 Tue, 01 Sep 2020 23:54:22 -0700 (PDT)
MIME-Version: 1.0
References: <20200805121021.GA12598@alpha.franken.de> <1c3cb503-720f-059e-2bac-ae692203c389@flygoat.com>
 <20200807131357.GA11979@alpha.franken.de> <410cf75c-4cf5-94d8-fbc9-821d38f8a299@flygoat.com>
 <96dbe0be-7af6-b182-bbe0-534883539812@flygoat.com> <20200810141219.GA2844@alpha.franken.de>
 <106e65f5-d456-deaa-b47b-45b2a461b048@flygoat.com> <CAAhV-H7xJXX7V18ZUKw6RdEOtKUF49itrXY0PBNFAcSBbr4idQ@mail.gmail.com>
 <20200811120645.GA6199@alpha.franken.de> <CAAhV-H5YqF5dcdFiBgVSXzu67QOKTFq3FME8ernswGts45GHfQ@mail.gmail.com>
 <20200826124646.GA9809@alpha.franken.de>
In-Reply-To: <20200826124646.GA9809@alpha.franken.de>
From:   Huacai Chen <chenhc@lemote.com>
Date:   Wed, 2 Sep 2020 14:54:10 +0800
Message-ID: <CAAhV-H4dZMgjdHiLrebBz10J7asadErM53F+TM=fLV_66dhiLw@mail.gmail.com>
Subject: Re: [PATCH V3 1/2] MIPS: Loongson-3: Enable COP2 usage in kernel
To:     Thomas Bogendoerfer <tsbogend@alpha.franken.de>
Cc:     Jiaxun Yang <jiaxun.yang@flygoat.com>,
        "open list:MIPS" <linux-mips@vger.kernel.org>,
        Fuxin Zhang <zhangfx@lemote.com>,
        Zhangjin Wu <wuzhangjin@gmail.com>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-mips-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-mips.vger.kernel.org>
X-Mailing-List: linux-mips@vger.kernel.org

Hi, Thomas,

On Wed, Aug 26, 2020 at 8:48 PM Thomas Bogendoerfer
<tsbogend@alpha.franken.de> wrote:
>
> On Fri, Aug 14, 2020 at 05:44:18PM +0800, Huacai Chen wrote:
> > On Tue, Aug 11, 2020 at 8:08 PM Thomas Bogendoerfer
> > <tsbogend@alpha.franken.de> wrote:
> > > this comes with it's own memcpy/memset and stuff, I don't see a reason why
> > > COP2 needs to be enabled there,
> > gslq/gssq can also be generated by toolchains.
>
> I don't want to introduce every single CPU optimization bits into such
> a closed first stage loader. So please use $(filter-out) in
> arch/mips/boot/compressed/Makefile to disable creation of 16byte load/stores.
>
> > > which is correct for all user space process, otherwise the whole
> > > cop2 exception thing wouldn't work. And if cop2 exception handling
> > > has been run it's set in THREAD_STATUS.
> > >
> > THREAD_STATUS means thread_struct.cp0_status, which is the cp0_status
> > when a process runs in kernel-space. KSTK_STATUS (what you have seen
> > in copy_thread_tls() below) means cp0_status in a process's kernel
> > stack, which saves the cp0_status when a process runs in user-space.
> > Whether COP2 exception can work depends on that KSTK_STATUS (but not
> > THREAD_STATUS) should not contain CU2 at the first time. So, whether
> > or not THREAD_STATUS contains CU2, it won't break COP2 handling.
>
> so why don't we fix the the in-kernel cp0_status instead ?
>
> How about this ?
>
> diff --git a/arch/mips/kernel/process.c b/arch/mips/kernel/process.c
> index 90b869297893..26fb77a8d406 100644
> --- a/arch/mips/kernel/process.c
> +++ b/arch/mips/kernel/process.c
> @@ -133,6 +133,7 @@ int copy_thread_tls(unsigned long clone_flags, unsigned long usp,
>         /*  Put the stack after the struct pt_regs.  */
>         childksp = (unsigned long) childregs;
>         p->thread.cp0_status = read_c0_status() & ~(ST0_CU2|ST0_CU1);
> +       p->thread.cp0_status |= ST0_KERNEL_CUMASK;
>         if (unlikely(p->flags & PF_KTHREAD)) {
>                 /* kernel thread */
>                 unsigned long status = p->thread.cp0_status;
I tried this way but it doesn't work, the reason is that the resume
routine in r4k_switch.S save the current hardware status into
THREAD_STATUS, but CU2 in hardware is cleared in its caller (i.e.,
switch_to). However, I will send V5 to use ST0_KERNEL_CUMASK in all
possible places to avoid #ifdefs.

Huacai

>
> Thomas.
>
> --
> Crap can work. Given enough thrust pigs will fly, but it's not necessarily a
> good idea.                                                [ RFC1925, 2.3 ]
